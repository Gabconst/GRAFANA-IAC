name: Deploy Infra + Config

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform-ansible:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
    steps:
      # --- Checkout do repositório ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Configurar credenciais AWS ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # --- Terraform ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Terraform Init
        run: terraform -chdir="$GITHUB_WORKSPACE/compute" init

      - name: Terraform Plan
        run: terraform -chdir="$GITHUB_WORKSPACE/compute" plan

      - name: Terraform Apply
        run: terraform -chdir="$GITHUB_WORKSPACE/compute" apply -auto-approve

      # --- Configurar chave SSH do GitHub Secret ---
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEVOPS_PDI_PEM }}" > ~/.ssh/devops-pdi.pem
          chmod 600 ~/.ssh/devops-pdi.pem

      # --- Instalar Ansible e dependências ---
      - name: Install Ansible & Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ansible python3-boto3 unzip jq

      # --- Rodar Ansible Playbook com retry no IP ---
      - name: Run Ansible Playbook
        run: |
          PLAYBOOK_DIR="$GITHUB_WORKSPACE/automation"
          TF_DIR="$GITHUB_WORKSPACE/compute"

          # Retry para pegar IP da instância
          for i in {1..10}; do
            TF_STATE_IP=$(terraform -chdir="$TF_DIR" output -raw instance_ip 2>/dev/null)
            if [ -n "$TF_STATE_IP" ]; then
              echo "IP encontrado: $TF_STATE_IP"
              break
            else
              echo "IP ainda não disponível, aguardando 10s..."
              sleep 10
            fi
          done

          if [ -z "$TF_STATE_IP" ]; then
            echo "Erro: Não foi possível obter o IP da instância EC2."
            exit 1
          fi

          # Criar inventory .ini
          echo "[grafana-servers]" > "$PLAYBOOK_DIR/inventory.ini"
          echo "$TF_STATE_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/devops-pdi.pem" >> "$PLAYBOOK_DIR/inventory.ini"

          # Criar arquivo de Vault
          echo "$ANSIBLE_VAULT_PASSWORD" > ~/.vault_pass.txt

          # Rodar playbook
          ansible-playbook -i "$PLAYBOOK_DIR/inventory.ini" "$PLAYBOOK_DIR/playbook.yml" --vault-password-file ~/.vault_pass.txt -vvv
