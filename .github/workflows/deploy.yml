name: Deploy GRAFANA SERVER

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform-ansible:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}

    steps:
      # --- Checkout ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Configurar credenciais AWS ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # --- Terraform ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Terraform Init
        run: terraform -chdir=compute init

      - name: Terraform Plan
        run: terraform -chdir=compute plan

      - name: Terraform Apply
        run: terraform -chdir=compute apply -auto-approve

      # --- Configurar chave SSH do GitHub Secret ---
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEVOPS_PDI_PEM }}" > ~/.ssh/devops-pdi.pem
          chmod 600 ~/.ssh/devops-pdi.pem

      # --- Instalar Ansible ---
      - name: Install Ansible & Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ansible python3-boto3 unzip jq

      # --- Executar Playbook ---
      - name: Run Ansible Playbook
        run: |
          BASE_DIR="$GITHUB_WORKSPACE"
          
          # Pega o IP público da instância criada no Terraform
          TF_STATE_IP=$(terraform -chdir="$BASE_DIR/compute" output -raw instance_ip)
          
          # Cria inventário dinâmico
          cat <<EOF > "$BASE_DIR/automation/inventory.json"
          {
            "grafana-servers": {
              "hosts": ["$TF_STATE_IP"],
              "vars": {
                "ansible_host": "$TF_STATE_IP",
                "ansible_user": "ubuntu",
                "ansible_ssh_private_key_file": "~/.ssh/devops-pdi.pem"
              }
            }
          }
          EOF
          
          # Executa o playbook usando variável de ambiente (sem vault)
          ansible-playbook \
            -i "$BASE_DIR/automation/inventory.json" \
            "$BASE_DIR/automation/playbook.yml"
