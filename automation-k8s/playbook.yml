---
- name: Provisiona cluster Minikube com Prometheus, Nginx e ArgoCD
  hosts: all
  become: true
  environment:
    DEBIAN_FRONTEND: noninteractive

  tasks:
    # ----------------------------------------------------------
    # 1. Atualiza pacotes do sistema
    # ----------------------------------------------------------
    - name: Atualiza cache do apt
      apt:
        update_cache: yes
      retries: 3
      delay: 10
      register: apt_update
      until: apt_update is succeeded
      timeout: 180

    # ----------------------------------------------------------
    # 2. Instala pacotes base e Docker
    # ----------------------------------------------------------
    - name: Instala pacotes necess√°rios
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - docker.io
        state: present
        update_cache: yes
      retries: 3
      delay: 10
      register: docker_install
      until: docker_install is succeeded
      timeout: 300

    - name: Habilita e inicia o Docker
      systemd:
        name: docker
        enabled: true
        state: started

    # ----------------------------------------------------------
    # 3. Instala kubectl
    # ----------------------------------------------------------
    - name: Instala kubectl
      shell: |
        curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.30.0/bin/linux/amd64/kubectl
        chmod +x /usr/local/bin/kubectl
      args:
        creates: /usr/local/bin/kubectl

    # ----------------------------------------------------------
    # 4. Instala Minikube
    # ----------------------------------------------------------
    - name: Instala Minikube
      shell: |
        curl -Lo /usr/local/bin/minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x /usr/local/bin/minikube
      args:
        creates: /usr/local/bin/minikube

    # ----------------------------------------------------------
    # 5. Inicia Minikube
    # ----------------------------------------------------------
    - name: Inicia cluster Minikube
      become_user: ubuntu
      shell: |
        minikube start --driver=docker --force
      args:
        chdir: /home/ubuntu
      register: minikube_start
      changed_when: "'Done!' in minikube_start.stdout or 'Running' in minikube_start.stdout"
      timeout: 600

    # ----------------------------------------------------------
    # 6. Aplica manifests do Prometheus e Nginx
    # ----------------------------------------------------------
    - name: Aplica manifests do Prometheus e Nginx
      become_user: ubuntu
      shell: |
        minikube kubectl -- apply -f /home/ubuntu/k8s/prometheus.yaml
        minikube kubectl -- apply -f /home/ubuntu/k8s/nginx.yaml
      args:
        chdir: /home/ubuntu
      timeout: 300

    # ----------------------------------------------------------
    # 7. Aplica manifests do ArgoCD (no namespace default)
    # ----------------------------------------------------------
    - name: Aplica ConfigMap e Deployments do ArgoCD
      become_user: ubuntu
      shell: |
        sed -i 's/namespace: argocd/namespace: default/g' /home/ubuntu/k8s/argocd-deployment.yaml
        sed -i 's/namespace: argocd/namespace: default/g' /home/ubuntu/k8s/argocd-service.yaml
        sed -i 's/namespace: argocd/namespace: default/g' /home/ubuntu/k8s/argocd-configmap.yaml
        minikube kubectl -- apply -f /home/ubuntu/k8s/argocd-configmap.yaml
        minikube kubectl -- apply -f /home/ubuntu/k8s/argocd-deployment.yaml
        minikube kubectl -- apply -f /home/ubuntu/k8s/argocd-service.yaml
      timeout: 300

    # ----------------------------------------------------------
    # 8. Verifica status dos pods
    # ----------------------------------------------------------
    - name: Mostra pods ativos
      become_user: ubuntu
      shell: minikube kubectl -- get pods -A
      register: pods
      changed_when: false

    - name: Exibe resultado
      debug:
        var: pods.stdout
