---
- name: Setup de servidor com Minikube
  hosts: grafana-servers
  become: true

  vars:
    minikube_bin_url: "https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64"
    minikube_bin_dest: "/usr/local/bin/minikube"
    docker_packages:
      - docker.io

  tasks:

    - name: Atualiza cache do APT
      apt:
        update_cache: yes
        upgrade: dist

    - name: Instala dependências básicas
      apt:
        name:
          - curl
          - wget
          - git
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    ####### DOCKER + MINIKUBE ########

    - name: Instala Docker
      apt:
        name: "{{ docker_packages }}"
        state: present
        update_cache: yes

    - name: Baixa binário do Minikube
      get_url:
        url: "{{ minikube_bin_url }}"
        dest: /tmp/minikube-linux-amd64
        mode: '0755'

    - name: Move binário para /usr/local/bin
      command: mv /tmp/minikube-linux-amd64 {{ minikube_bin_dest }}
      args:
        creates: "{{ minikube_bin_dest }}"

    - name: Garante permissão de execução no Minikube
      file:
        path: "{{ minikube_bin_dest }}"
        mode: '0755'
        owner: root
        group: root

    - name: Cria alias kubectl no .bashrc do usuário ubuntu
      become_user: ubuntu
      lineinfile:
        path: /home/ubuntu/.bashrc
        line: 'alias kubectl="minikube kubectl --"'
        insertafter: EOF

    - name: Inicia o cluster Minikube (driver Docker)
      become_user: ubuntu
      environment:
        CHANGE_MINIKUBE_NONE_USER: "true"
      shell: |
        minikube start --driver=docker || true
      args:
        executable: /bin/bash

    ####### PYTHON + K8S ########

    - name: Instala biblioteca kubernetes do Python (Ubuntu 24.04 fix)
      pip:
        name: kubernetes
        executable: pip3
        extra_args: --break-system-packages
